{"version":3,"sources":["images/spring.jpg","components/GreetingCard.js","images/winter.jpg","images/summer.jpg","images/fall.jpg","components/CustomMessage.js","App.js","reportWebVitals.js","index.js"],"names":["GreetingCard","customImage","Greeting","Body","Closing","setCanCustomize","className","src","alt","Button","id","onClick","variant","CustomMessage","imageIndex","setCustomImage","setGreeting","setBody","setClosing","useState","Email","setEmail","alertMessage","setAlertMessage","showAlert","setShowAlert","showSuccess","setShowSuccess","isValidCard","setIsValidCard","TextField","label","value","onChange","event","target","margin","multiline","rows","FormHelperText","Select","e","autoWidth","MenuItem","spring","summer","fall","winter","type","preventDefault","length","test","verifyInput","Alert","style","severity","mailto","url","encodeURIComponent","window","open","color","App","query","URLSearchParams","location","search","get","canCustomize","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","theme","createTheme","palette","primary","main","secondary","background","default","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","href","textDecoration","padding","document","getElementById"],"mappings":"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","file":"static/js/main.f32f09b5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/spring.b572d972.jpg\";","import React from 'react';\nimport { Button} from '@mui/material';\n\nexport default function GreetingCard({\n    customImage,\n    Greeting,\n    Body,\n    Closing,\n    setCanCustomize\n}) {\n\n    return (\n    <div>\n        <img className='CardImage' src={customImage} alt='card' />\n        <p className='Cursive'>\n            {Greeting}\n        </p>\n        <p className='Cursive'>\n            {Body}\n        </p>\n        <p className='Cursive'>\n            {Closing}\n        </p>\n        <div>\n            <Button\n                className='Button'\n                id='reshare-card'\n                onClick={() => setCanCustomize(true)}\n                variant='contained'\n            >\n                Reshare This Card\n            </Button>\n        </div>\n    </div>\n  );\n}","export default __webpack_public_path__ + \"static/media/winter.990c5654.jpg\";","export default __webpack_public_path__ + \"static/media/summer.cd585225.jpg\";","export default __webpack_public_path__ + \"static/media/fall.a2b816c0.jpg\";","import React, { useState } from 'react';\nimport {\n  TextField,\n  Button,\n  Alert,\n  Select,\n  MenuItem,\n  FormHelperText\n} from '@mui/material';\nimport GreetingCard from './GreetingCard';\nimport winter from '../images/winter.jpg';\nimport spring from '../images/spring.jpg';\nimport summer from '../images/summer.jpg';\nimport fall from '../images/fall.jpg';\n\nexport default function CustomMessage({ \n  customImage,\n  imageIndex,\n  Greeting,\n  Body,\n  Closing,\n  setCustomImage,\n  setGreeting,\n  setBody,\n  setClosing,\n  setCanCustomize \n}) {\n  const [Email, setEmail] = useState('');\n  const [alertMessage, setAlertMessage] = useState('');\n  const [showAlert, setShowAlert] = useState(false);\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [isValidCard, setIsValidCard] = useState(false);\n    \n  const verifyInput = (event) => {\n      event.preventDefault();\n      if (!(Email.length > 0) || !(/\\S/.test(Email))) {\n        setShowSuccess(false);\n        setShowAlert(true);\n        setAlertMessage('Please enter an email.');\n      }\n      else if (!(Greeting.length > 0) || !(/\\S/.test(Greeting))) {\n        setShowSuccess(false);\n        setShowAlert(true);\n        setAlertMessage('Please enter a greeting.');\n      }\n      else if (!(Body.length > 0) || !(/\\S/.test(Body))) {\n        setShowSuccess(false);\n        setShowAlert(true);\n        setAlertMessage('Please enter a body.');\n      }\n      else if (!(Closing.length > 0) || !(/\\S/.test(Closing))) {\n        setShowSuccess(false);\n        setShowAlert(true);\n        setAlertMessage('Please enter a closing.');\n      }\n      else {\n        setShowSuccess(true);\n        setShowAlert(false);\n        setAlertMessage('Preview and send your card!');\n        setIsValidCard(true);\n      }\n  }\n\n  const sendCard = () => {\n    let mailto = `mailto:${Email}`;\n    mailto += '?subject=Greeting Card';\n    mailto += '&body=You have a new greeting card.';\n    mailto += '%0D%0A%0D%0A';\n    mailto += 'Here is your card';\n    mailto += '%0D%0A';\n\n    let url = 'https://xmercado.github.io/ecard';\n    url += `?img=${encodeURIComponent(customImage)}`;\n    url += `&greeting=${encodeURIComponent(Greeting)}`;\n    url += `&body=${encodeURIComponent(Body)}`;\n    url += `&closing=${encodeURIComponent(Closing)}`;\n\n    mailto += encodeURIComponent(url);\n\n    window.open(mailto);\n    setCanCustomize(false);\n  }\n\n  return (\n    <div className='CustomizeContainer'>\n      <form className='CustomizeMessage'>\n        <div>\n          <h2>\n            Customize Message\n          </h2>\n        </div> \n          <div>\n            <div className='FormInput'> \n                <TextField \n                    id='email'\n                    label='Recipient Email'\n                    value={Email} \n                    onChange={event => setEmail(event.target.value)}\n                    margin='dense'\n                    variant='filled'\n                />\n            </div>\n            <div className='FormInput'> \n                <TextField \n                    id='greeting'\n                    label='Greeting'\n                    value={Greeting} \n                    onChange={event => setGreeting(event.target.value)}\n                    margin='dense'\n                    variant='filled'\n                />\n            </div>\n            <div className='FormInput'> \n                <TextField \n                    id='body'\n                    label='Body'\n                    value={Body} \n                    onChange={event => setBody(event.target.value)}\n                    margin='dense'\n                    variant='filled'\n                    multiline\n                    rows={4}\n                />\n            </div>\n            <div className='FormInput'> \n                <TextField \n                    id='closing'\n                    label='Closing'\n                    value={Closing} \n                    onChange={event => setClosing(event.target.value)} \n                    margin='dense'\n                    variant='filled'\n                />\n            </div>\n            <div className='ChangeImage'>\n              <FormHelperText>Change Image</FormHelperText>\n              <Select\n                id='change-image'\n                label='Change Image'\n                value={customImage}\n                onChange={(e) => setCustomImage(e.target.value)}\n                variant='filled'\n                autoWidth\n              >\n                <MenuItem value={spring}>Spring</MenuItem>\n                <MenuItem value={summer}>Summer</MenuItem>\n                <MenuItem value={fall}>Fall</MenuItem>\n                <MenuItem value={winter}>Winter</MenuItem>\n              </Select>\n            </div>\n            <div className='Button'>\n              <Button\n                className='Button'\n                id='verify-card'\n                type='submit'\n                onClick={(event) => verifyInput(event)}\n                variant='contained'\n              >\n                Submit\n              </Button>\n            </div>\n          {\n            showAlert &&\n              <Alert \n                  style={{margin: 10}}\n                  severity='error' \n              >\n                {alertMessage}\n              </Alert>\n          }\n          {\n            showSuccess &&\n              <Alert \n                style={{margin: 10}}\n                severity='success' \n              >\n                {alertMessage}\n              </Alert>\n          }\n            </div>\n      </form>\n      <div className='Preview'>\n        <h2>\n          Preview\n        </h2>\n        <GreetingCard\n          customImage={customImage}\n          imageIndex={imageIndex}\n          Greeting={Greeting}\n          Body={Body}\n          Closing={Closing}\n          setCustomImage={setCustomImage}\n          setCanCustomize={setCanCustomize}\n        />\n        { isValidCard\n          ?\n          <div className='Button'>\n            <Button\n              className='Button'\n              id='send-card'\n              onClick={sendCard}\n              variant='contained'\n              color='secondary'\n            >\n              Send\n            </Button>\n          </div>\n          :\n          <div className='Button'>\n            <Button\n              className='Button'\n              id='send-card'\n              variant='outlined'\n              color='secondary'\n            >\n              Send\n            </Button>\n          </div>\n        }\n      </div>\n    </div>\n  );\n}","import React, { useState } from 'react';\nimport './App.css';\nimport spring from './images/spring.jpg';\nimport GreetingCard from './components/GreetingCard';\nimport CustomMessage from './components/CustomMessage';\n\nfunction App() {\n  const query = new URLSearchParams(window.location.search);\n  const [customImage, setCustomImage] = useState(query.get('img') || spring);\n  const [Greeting, setGreeting] = useState(query.get('greeting') || 'Hello friend,');\n  const [Body, setBody] = useState(query.get('body') || 'Have a good one!');\n  const [Closing, setClosing] = useState(query.get('closing') || 'From your friend');\n  const [canCustomize, setCanCustomize] = useState(false);\n\n  return (\n    <div className='App'>\n      { canCustomize\n          ?\n            <CustomMessage\n              customImage={customImage}\n              Greeting={Greeting}\n              Body={Body}\n              Closing={Closing}\n              setCustomImage={setCustomImage}\n              setGreeting={setGreeting}\n              setBody={setBody}\n              setClosing={setClosing}\n              setCanCustomize={setCanCustomize}\n            />\n          :\n            <GreetingCard\n              customImage={customImage}\n              Greeting={Greeting}\n              Body={Body}\n              Closing={Closing}\n              setCanCustomize={setCanCustomize}\n            />\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProvider, createTheme, CssBaseline} from '@mui/material';\n\nconst theme = createTheme({\n  palette: {\n     primary: {\n      main: '#D3D3D3',\n     },\n     secondary: {\n      main: '#000000',\n     },\n     background: {\n       default: '#EBF9FF',\n     }\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <a\n        href='https://github.com/xmercado'\n        style={{\n          textDecoration: 'none',\n          color: '#c92020',\n          padding: '10px'\n        }}\n      >\n      by Xavier Mercado\n      </a>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}